version: "3.12.0"

services:
  db:
    image: postgres:16.3

    env_file:
      - .env

  rabbitmq:
    image: "rabbitmq:alpine"

    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  app:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  celery:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    command: celery -A apps.tasks worker -l info --without-gossip --without-mingle --without-heartbeat
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

#  beats:
#    build:
#      context: .
#      dockerfile: docker/local.Dockerfile
#    command: celery -A apps.tasks beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
#    volumes:
#      - .:/app
#    depends_on:
#      - db
#      - rabbitmq
#    restart: on-failure
